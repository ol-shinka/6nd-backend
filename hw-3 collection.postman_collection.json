{
	"info": {
		"_postman_id": "d1f69a3e-b1c2-4b7a-936f-3e46371133fe",
		"name": "hw-3 collection",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "28235123"
	},
	"item": [
		{
			"name": "data",
			"item": [
				{
					"name": "books",
					"item": [
						{
							"name": "получение списка книг",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Content-Type is correct\", function () {\r",
											"    pm.response.to.be.header(\"Content-Type\", \"application/json\");\r",
											"});\r",
											"\r",
											"pm.test(\"Your test name\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData[0].id).to.eql(1);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{api_url}}?books",
									"host": [
										"{{api_url}}"
									],
									"query": [
										{
											"key": "books",
											"value": null
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "некорректный запрос",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{api_url}}?date",
									"host": [
										"{{api_url}}"
									],
									"query": [
										{
											"key": "date",
											"value": null
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "добавление книги",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Content-Type is correct\", function () {\r",
											"    pm.response.to.be.header(\"Content-Type\", \"application/json\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{api_url}}?books/id=1",
									"host": [
										"{{api_url}}"
									],
									"query": [
										{
											"key": "books/id",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "удаление книги",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Content-Type is correct\", function () {\r",
											"    pm.response.to.be.header(\"Content-Type\", \"application/json\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{api_url}}?books/id=1",
									"host": [
										"{{api_url}}"
									],
									"query": [
										{
											"key": "books/id",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "получение списка избранных книг",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Content-Type is correct\", function () {\r",
											"    pm.response.to.be.header(\"Content-Type\", \"application/json\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{api_url}}?books/users/id=1",
									"host": [
										"{{api_url}}"
									],
									"query": [
										{
											"key": "books/users/id",
											"value": "1"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "users",
					"item": [
						{
							"name": "добавление нового юзера",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Content-Type is correct\", function () {\r",
											"    pm.response.to.be.header(\"Content-Type\", \"application/json\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{api_url}}?users/id=2",
									"host": [
										"{{api_url}}"
									],
									"query": [
										{
											"key": "users/id",
											"value": "2"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "получение списка юзеров",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Content-Type is correct\", function () {\r",
											"    pm.response.to.be.header(\"Content-Type\", \"application/json\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{api_url}}?users",
									"host": [
										"{{api_url}}"
									],
									"query": [
										{
											"key": "users",
											"value": null
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "изменение данных юзера",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Content-Type is correct\", function () {\r",
											"    pm.response.to.be.header(\"Content-Type\", \"application/json\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [],
								"url": {
									"raw": "{{api_url}}?users/id=2",
									"host": [
										"{{api_url}}"
									],
									"query": [
										{
											"key": "users/id",
											"value": "2"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "удаление юзера",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Content-Type is correct\", function () {\r",
											"    pm.response.to.be.header(\"Content-Type\", \"application/json\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{api_url}}?books/id=1",
									"host": [
										"{{api_url}}"
									],
									"query": [
										{
											"key": "books/id",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "некорректный запрос",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{api_url}}?date",
									"host": [
										"{{api_url}}"
									],
									"query": [
										{
											"key": "date",
											"value": null
										}
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "practic",
			"item": [
				{
					"name": "приветствие пользователя",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Content-Type is correct\", function () {\r",
									"    pm.response.to.be.header(\"Content-Type\", \"text/plain\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"Hello, Olesya\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{api_url}}?hello={{name}}",
							"host": [
								"{{api_url}}"
							],
							"query": [
								{
									"key": "hello",
									"value": "{{name}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "приветствие с пустой строкой",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"pm.test(\"Content-Type is correct\", function () {\r",
									"    pm.response.to.be.header(\"Content-Type\", \"text/plain\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"Enter a name\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{api_url}}?hello=",
							"host": [
								"{{api_url}}"
							],
							"query": [
								{
									"key": "hello",
									"value": ""
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "список юзеров",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Content-Type is correct\", function () {\r",
									"    pm.response.to.be.header(\"Content-Type\", \"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"Your test name\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData[0].id).to.eql(1);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{api_url}}?users",
							"host": [
								"{{api_url}}"
							],
							"query": [
								{
									"key": "users",
									"value": null
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "некорректный запрос",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{api_url}}?date",
							"host": [
								"{{api_url}}"
							],
							"query": [
								{
									"key": "date",
									"value": null
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "без параметров",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Content-Type is correct\", function () {\r",
									"    pm.response.to.be.header(\"Content-Type\", \"text/plain\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"Hello, World\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{api_url}}",
							"host": [
								"{{api_url}}"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}